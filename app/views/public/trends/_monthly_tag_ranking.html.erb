<%#  Chart.js本体 %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<%# Chart.js の DataLabels プラグイン %>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>

<%# タグ付けのランキング円グラフ %>
<div class="flex justify-between items-center mb-4">
  <form method="get" action="<%= request.path %>">
    <label for="month" class="mr-2">月を選択:</label>
    <select name="month" id="month" onchange="this.form.submit()" class="border p-1 rounded">
      <% @months.each do |label, value| %>
        <option value="<%= value %>" <%= "selected" if value == @selected_month %>><%= label %></option>
      <% end %>
    </select>
  </form>
</div>

<%# グラフの表示領域 %>
<div class="w-full overflow-x-auto mb-4">
  <canvas id="trendChart" class="max-w-full h-auto"></canvas>
</div>

<%# グラフと凡例のコンテナ %>
<div class="chart-container mb-4">
  <canvas id="trendChart" class="max-w-full h-auto"></canvas>
  <div class="chart-legend"></div>
</div>

<script>
  const chartData = <%= raw @chart_data.to_json %>;
  const ctx = document.getElementById('trendChart').getContext('2d');
  new Chart(ctx, {
    type: 'pie',
    data: chartData,
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: {
        title: {
          display: true,
          text: chartData.datasets[0].label
        },
        legend: {
          position: 'right',
          labels: {
            color: '#333',
            font: {
              size: 15,
              weight: 'bold'
            }
          }
        },
        datalabels: {
          color: '#fff',
          font: {
            weight: 'bold',
            size: 8
          },
          formatter: function (value, context) {
            return context.chart.data.labels[context.dataIndex];
          }
        }
      }
    },
    plugins: [ChartDataLabels]
  });
</script>

<%= content_for :head do %>
  <%= javascript_pack_tag 'application' %> <!-- Chart.jsを読み込む -->
<% end %>

<%# 農作業スケジュール用のChar.js作成 %>
<div class="flex justify-between items-center mb-4">
  <h4 style="border-bottom: 2px solid #ccc; padding-bottom: 8px;">
    <strong>青森のりんご作りを知ろう</strong>
  </h4>
  <p>青森のりんご農家さんの1年の作業をまとめています。作業名をタグ付けしている農家さんもいるので、
どのような作業をいつ行なっているのか一緒に勉強してりんごマスターになりましょう！気になる作業は検索で投稿チェック！
  </p>

  <div class="w-full overflow-x-auto mb-4">
    <%# canvasの幅を100%にし、高さ自動調整 %>
    <div>
      <canvas id="ganttChart" class="w-full" style="height: 400px;"></canvas>
    </div>

    <script>
      document.addEventListener("turbolinks:load", function() {
        const ctx = document.getElementById('ganttChart').getContext('2d');

        const data = {
          labels: [
            '施肥（肥料やり）', '病害虫駆除（薬剤散布）', '授粉（マメコバチ）', '草刈り', '摘果（実すぐり）', '袋掛け', 
            '袋はぎ', '反射シート敷', '摘葉', '実まわし',
            '収穫', '選果', '枝剪定'
          ],
          datasets: [
            {
              label: '作業開始！',
              data: [3, 4, 5, 5, 6, 7, 8, 8, 8, 8, 8, 8, 2],
              backgroundColor: 'rgba(0,0,0,0)' // 透明バーで位置調整
            },
            {
              label: '作業期間',
              data: [2, 4, 1, 4, 2, 1, 1, 2, 2, 2, 3, 6, 2],
              backgroundColor: 'rgba(75,192,192,0.8)' // 実際のバー
            }
          ]
        };

        const config = {
          type: 'bar',
          data: data,
          options: {
            indexAxis: 'y',
            responsive: true,  // レスポンシブ対応
            maintainAspectRatio: false,  // アスペクト比を無視
            scales: {
              x: {
                title: {
                  display: true,
                  text: '月'
                },
                stacked: true,
                min: 1,
                max: 12
              },
              y: {
                stacked: true,
                ticks: {
                  // y軸のラベルを作業名に設定
                  callback: function(value, index, ticks) {
                    return data.labels[index]; // 各作業名を表示
                  }
                },
                // ラベルを回転させることで見やすくする
                angle: -45
              }
            }
          }
        };

        new Chart(ctx, config); // グラフを描画
      });
    </script>
  </div>
</div>
